------------LINUX_SERVERS------------

-----INSTALLATION OF LINUX SERVER INSIDE A VIRTUAL MACHINE, HOW TO INSTALL UBUNTU SERVER
Download https://www.virtualbox.org/
    -VDI VirtualBox Disk Image
    -Dinamically allocated
    -
Download Ubuntu Server ISO https://ubuntu.com/download/server
In virtualbox go to configuration
    -Storage
        Click on the empty cd
        Optical drive: Select virtual optical Disk and click 'ok'
    -Network 
        Attached to: Bridget adapter
        Adapeter type: pcnet-fast III(optional)
        Promiscuous modee: Allow all 
        Cable conected: selected
    -Start 


-----EXPLORING FILES
tail -f     monitor changes in a file in real time


-----PERMISSIONS
chmod u+x file.txt      it assigns execute permission to user in 'file.txt'
chmod g-0 file.txt      this removes execute permissions to the group in the 'file.txt'
chmod +x                this assigns execute permissions to all

octal mode 
r = 4
w = 2
x = 1
- = 0

-rw-r--r-- 1 neomatrix neomatrix   0 Feb 17 01:02 file.txt
chmod 644 file.txt

change owner
    -rw-r--r-- 1 neomatrix neomatrix   0 Feb 17 01:02 file.txt
sudo chown  root:root file.txt
    -rw-r--r-- 1 root      root        0 Feb 17 01:02 file.txt

ex for dierectories:
sudo chown whales:aquatic /TestUnix 


-----VIRTUAL TERMINALS 
-We can have up to 6 open terminals tty1 - tty6
ctrl + alt + fn     move between terminals. 
chvt + terminal number 

w                   it shows how many users are in my OS
tty                 this indicates the number of the terminal i am in.
ps -ft tty          list processes
kill + PID          this finish the process 

-----MANAGMENT AND MONITORING OF PROCESSES
ps aux                      it shows the processes running on the system 
ps aux | grep neomatrix     showing the processes of a specific user 
ctr z                       send a process to the background
jobs                        view background processes
fg                          bring in background processes

start a process but without losing the console
vi script.sh
#!/bin/bash
echo "hi"
:wq
add execution permission

./script.sh &               creates a specific background process (this allows you to continue using the console)
nohup ./script.sh           this creates an output where i can see the actions the process is doing


-----MONITORING SYSTEM RESOURCES 
top             specific information about OS processes 
cat /proc/cpuinfo | grep -i "Processor"     how many processors are in the system

free -h         it shows the memory information 

du  -hcs        hard drive state
example
du -hsc /home/neomatrix
du -hsc /

sudo ps auxf | sort -nr -k 3 | head -5      processes consuming more CPU 
sudo ps auxf | sort -nr -k 4 | head -5      processes consuming more RAM 

htop        package for a more organized managing of processes 


------NETWORK PARAMETERS 
ifconfig                its shows the network cards 
ip a                    this means ip address show 

ip -4 a 
ip -6 a                 specific type of addressing 

hostname                how i identify this host on the network 
route -n                default gateway

nslookup google.com     ip of a specific domain  
curl                    check connectivity to URLs 
wget                    retrieve content and files from various web servers, also allows downloading packages 

*sudo apt-get install net-tools
-----PACKAGE MANAGMENT ACCORDING TO THE 'DISTRO'

>>Debian / Ubuntu
sudo apt-get update         updating
sudo apt update             downlading *another way is by sudo apt dist-upgrade             
sudo apt-get upgrade  

sudo apt search "mysql$"    search for packages 
    sudo apt search "mysql-server"
    sudo snap search aws-cli

dpkg -l                     List all debs installed on the machine.
dpkg -i package.deb         Perform a package installation.
dpkg -r package.deb         Remove a package from the system.
dpkg-reconfigure tzdata     reconfigures this package

apt install package         apt repositories another way to install.


>>Red Hat / CentOS / Fedora
.rpm Red Hat Package Manager.
RPM database, located in var/lib/rpm
rpm -qa         List all rpms installed on the machine. (query all)
    rpm -qi bash
    rpm -qc bash
rpm -i package.rpm          Perform a package installation. (install)
rpm -e package.rpm          Remove a package from the system. (erase)

sudo yum update                 updating 
sudo yum install net-tools      installing a package 
rpm -e curl                     remove a package


-----NAGIOS 
Installation of some tools to manage a MySQL database (remember that we will install and work with MySQL in an upcoming class):
    sudo apt install build-essential libgd-dev openssl libssl-dev unzip apache2 php gcc libdbi-perl libdbd-mysql-perl

Nagios installation
    wget https://assets.nagios.com/downloads/nagioscore/releases/nagios-4.4.4.tar.gz -O nagioscore.tar.gz
Unzip and unpack archives with tar:
    unzip:  tar xvzf nagioscore.tar.gz
    go to: the created folder nagios-4.4.4
configuration
    sudo ./configure --with-httpd-conf=/etc/apache2/sites-enabled
execute this 
    sudo make all
    sudo make install 
        *if error:
        sudo make install-groups-users
        sudo usermod -a -G nagios www-data
continue
    sudo make install-init
    sudo make install-commandmode
    sudo make install-config
    sudo make install-web-conf
verify installation 
    curl localhost | grep apache 
    sudo systemctl status nagios  
Activate nagios
    sudo systemctl start nagios 

-Nagios Plugins
cd 
VER="2.3.3"
curl -SL https://github.com/nagios-plugins/nagios-plugins/releases/download/release-$VER/nagios-plugins-$VER.tar.gz | tar -xzf -

In the main directory you will have an additional directory â€“ nagios-plugins-2.3.3
navigate to the directory where the plugins are located and

compile the Nagios plugins with the following commands:
    ./configure --with-nagios-user=nagios --with-nagios-group=nagios
    sudo make install
start the Nagios service
    sudo systemctl enable --now nagios
    sudo systemctl status nagios
access Nagios
    Open your web browser and go to the displayed URL.
    http://server-IP/nagios


-----USERS 
id                  Real and effective User ID (UID) and Group ID (GID)
cat /etc/passwd     OS Users 
cat /etc/shadow     User passwords 
sudo passwd root    change root password 



----CREATING AND MANAGING USERS ACCOUNTS 
sudo useradd username   Create a user without immediately assigning a password or asking for more information. We must finish configuring this account by hand later.
sudo adduser username   Create a new user with a password and some other information. It will also create a new folder in the /home/ folder.

sudo userdel username        remove user accounts.
usermod                 modify the information of some account.

Never manually modify the /etc/passwd file. 

cat /urs/sbin/adduser   to see the content of adduser


-----SWICHING USERS 
1 Creating an user
    sudo adduser nodejs
2 switch user 
    sudo su - nodejs 
3 Trying to update
    sudo apt update  *nodejs is not in the sudoers file.
4 solution
    exit 
    groups nodejs
 -  sudo gpasswd -a nodejs sudo
try the spteps 3 and 3 again

-remove an user from a group in this case 'sudo'
    sudo gpasswd -d nodejs sudo
    or
    sudo usermod -aG sudo nodejs   *now in groups = nodejs sudo
-see what permissions this user has
    sudo -l 






