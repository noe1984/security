------------LINUX_SERVERS------------

-----INSTALLATION OF LINUX SERVER INSIDE A VIRTUAL MACHINE, HOW TO INSTALL UBUNTU SERVER
Download https://www.virtualbox.org/
    -VDI VirtualBox Disk Image
    -Dinamically allocated
    -
Download Ubuntu Server ISO https://ubuntu.com/download/server
In virtualbox go to configuration
    -Storage
        Click on the empty cd
        Optical drive: Select virtual optical Disk and click 'ok'
    -Network 
        Attached to: Bridget adapter
        Adapeter type: pcnet-fast III(optional)
        Promiscuous modee: Allow all 
        Cable conected: selected
    -Start 


-----EXPLORING FILES
tail -f     monitor changes in a file in real time


-----PERMISSIONS
chmod u+x file.txt      it assigns execute permission to user in 'file.txt'
chmod g-0 file.txt      this removes execute permissions to the group in the 'file.txt'
chmod +x                this assigns execute permissions to all

octal mode 
r = 4
w = 2
x = 1
- = 0

-rw-r--r-- 1 neomatrix neomatrix   0 Feb 17 01:02 file.txt
chmod 644 file.txt

change owner
    -rw-r--r-- 1 neomatrix neomatrix   0 Feb 17 01:02 file.txt
sudo chown  root:root file.txt
    -rw-r--r-- 1 root      root        0 Feb 17 01:02 file.txt

ex for dierectories:
sudo chown whales:aquatic /TestUnix 


-----VIRTUAL TERMINALS 
-We can have up to 6 open terminals tty1 - tty6
ctrl + alt + fn     move between terminals. 
chvt + terminal number 

w                   it shows how many users are in my OS
tty                 this indicates the number of the terminal i am in.
ps -ft tty          list processes
kill + PID          this finish the process 

-----MANAGMENT AND MONITORING OF PROCESSES
ps aux                      it shows the processes running on the system 
ps aux | grep neomatrix     showing the processes of a specific user 
ctr z                       send a process to the background
jobs                        view background processes
fg                          bring in background processes

start a process but without losing the console
vi script.sh
#!/bin/bash
echo "hi"
:wq
add execution permission

./script.sh &               creates a specific background process (this allows you to continue using the console)
nohup ./script.sh           this creates an output where I can see the actions the process is doing


-----MONITORING SYSTEM RESOURCES 
top             specific information about OS 
    cat /proc/cpuinfo | grep -i "Processor"

free -h         it shows the memory information 

du  -hcs        hard drive state
example
du -hsc /home/neomatrix